openapi: 3.0.0
info:
  title: KRB Metaldetectors API Documentation
  description: API documentation for Spiffy
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.example.com/support
    email: srikrishna@techpixe.com

servers:
  - url: http://localhost:3002
    description: Localhost Server
  - url: https://camcapture.smartaihr.com
    description: Production Server

tags:
  - name: Users
    description: User creation related operations
  - name: Admin
    description: Admin related operations  
  - name: Products
    description: Product related operations  

components:
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: token    

paths:
  /users/register:
    post:
      summary: Register New User
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Enter the user Email
                  example: abcd@example.com
                password: 
                  type: string
                  description: enter user required password
                  example: Xyz@123
                username:
                  type: string
                  description: Enter user username
                  example: Xyz
                phoneno:
                  type: number
                  description: Enter user working mobile number
                  example: 8829937835
                country:
                  type: string
                  description: Enter user cuntry
                  example: India    
      responses:
        '200':
          description: user registration success
        '500':
          description: Email already exist or Failed to register  

  /users/validateregister:
    post:
      summary: Validate the registered users
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Eemail:
                  type: string
                  description: enter the Eemail
                  example: 05746a630f57a35e0cb2bd5f9d7cc15149e2e9eab7fb1facb24fefa41d3f7573
                uid:
                  type: string
                  description: Enter uid
                  example:  a38a07640e76a0c50bfd724c181f02b7
      responses:
        '200': 
          description: user verification successfull
        '201':
          description: User already verified
        '500':
          description: Duplicate data exist or Failed to verify 

  /users/login:
    post:
      summary: Login registered users'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:  
            schema: 
              type: object
              properties:
                email:
                  type: string
                  description: Enter the user reqgistered email
                  example: abcd@example.com
                password:
                  type: string
                  description: enrter the user password
                  example: Xyz@123
      responses:
        '201':
          description: user login sucessfull
        '500':
           description: Duplicate data exist or Failed to login 

  /users/forgot-password:
    post:
      summary: forgot password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: enter registered email to get the reset password link
                  example: xyz@example.com
      responses:
        '201':
          description: password reset link sent to email successfully
        '500': 
          description:  Duplicate data exist or Failed to sent mail 

  /users/reset-password:
    post:
      summary: reset the new password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Eemail:
                  type: string
                  descrtiption: enter the Eemail id
                  example: 05746a630f57a35e0cb2bd5f9d7cc15149e2e9eab7fb1facb24fefa41d3f7573
                uid:
                  type: string
                  description: enter the uid
                  example:  a38a07640e76a0c50bfd724c181f02b7
                new_password:
                  type: string
                  description: enter the new_password
                  example: Xyz@456
      responses:
        '200':
          description: password updated successfully
        '500':  
          description: Duplicate data exist or Failed to update

  /users/change-password:
    post: 
      summary: user can change their Password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: enter the user token 
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InByYXNhbm5hQHRlY2hwaXhlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ3MDMxMTMzLCJleHAiOjE3NDcwNjM1MzN9.wASrO8XcGyh0C9T8FZ9UYB98hm-TokAcdJztkG8IRew
                old_password: 
                  type: string
                  description: enter the old password
                  example: Xyz@456
                new_password:
                  type: string
                  description: enter the user new password
                  example: Abc@123
      responses:
        '200':
          description: password changed successfully
        '400':
          description: old password is incorrect  
        '404':  
          description: user not found
        '500':
          description: password is not changed  

  /users/profileupdate:
    put:
      summary: Update the user profile details
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Enter the user token 
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InByYXNhbm5hQHRlY2hwaXhlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ3MDMxMTMzLCJleHAiOjE3NDcwNjM1MzN9.wASrO8XcGyh0C9T8FZ9UYB98hm-TokAcdJztkG8IRew
                name:
                  type: string
                  description: Enter the user name
                  example: Prasanna Basava
                phoneno: 
                  type: string
                  description: Enter the user mobile number
                  example: 25643674735
                profilepic:
                  type: string
                  format: binary
                  description: Profile picture file to upload  
      responses:
        '200':
          description: Profile updated successfully
        '400':
          description: Missing required fields
        '500':
          description: Failed to update profile

  /users/contact-form:
    post:
      tags:
        - Users
      summary: Contact us
      description: You may contact the admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Full name of the user submitting the contact form
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  description: Email address of the user
                  example: "johndoe@example.com"
                phone:
                  type: string
                  pattern: "^[0-9]{10,15}$"
                  description: Phone number of the user (10-15 digits)
                  example: "9876543210"
                message:
                  type: string
                  description: Message content provided by the user
                  example: "I would like to know more about your services."
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error

  /users/logout:
    post:
      tags:
        - Users
      summary: Logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties: 
                token:
                  type: string
                  description: enter the token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InByYXNhbm5hQHRlY2hwaXhlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ3MDM0Njk0LCJleHAiOjE3NDcwNjcwOTR9.MzFhV6ynRUYqkisWER7lCi5FdbLs3fpIuj-Xan5gKa4
      responses:
        "200":
          description: Success
        "201":
          description: Created
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /products/add:
    post:
      summary: Add a product
      tags:
        - Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the product
                  example: Wireless Bluetooth Headphones
                description:
                  type: string
                  description: Description of the product
                  example: High-quality headphones with noise cancellation.
                price_in_usd:
                  type: number
                  description: Price of the product in USD
                  example: 99.99
                price_in_inr:
                  type: number
                  description: Price of the product in INR
                  example: 8299
                discountPrice:
                  type: number
                  description: Discount percentage (if applicable)
                  example: 10
                stock:
                  type: number
                  description: Total number of products in stock
                  example: 10
                categoryId:
                  type: number
                  description: Category ID the product belongs to
                  example: 1
                brandId:
                  type: number
                  description: Brand ID the product belongs to
                  example: 2
                rating:
                  type: number
                  description: Rating of the product
                  example: 4.5
                showIn:
                  type: string
                  description: Where the product is displayed
                  example: All, Featured, Best Selling, Recommended, New Arrival
                tags:
                  type: string
                  description: Related tags for the product
                  example: metals, bronze
                specifications:
                  type: array
                  items:
                    type: string
                  example: ["Bluetooth", "Headphones", "Wireless"]
                isPublished:
                  type: boolean
                  description: Publish status (true/false)
                  example: true
                availability:
                  type: string
                  description: Product availability status
                  example: In Stock, Out of Stock, Pre-order
                youtubeLinks:
                  type: array
                  items:
                    type: string
                  description: List of YouTube links related to the product
                  example: ["https://youtube.com/example","https://youtube.com/elpmaxe"]  
                manual:
                  type: array
                  items:
                    type: string
                  description: List of manual/documentation links
                  example: ["https://youtube.com/example"] 
                product_details:
                  type: string
                  description: Complete product details
                  example: All-inclusive Detector for treasure hunters with highest demands - including all features. Measuring depth: customers found objects up to 25m (82ft) deep. Use cases: treasure hunting, gold prospecting, cavity detection.
                features:
                  type: boolean
                  description: Features availability (true/false)
                  example: true
                token:
                  type: string
                  description: User authentication token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                useCase:
                  type: boolean
                  description: Use case applicability (true/false)
                  example: true
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Uploaded product images
      responses:
        '200':
          description: Product added successfully
        '403':
          description: Access denied - Admin role required  
        '500':
          description: Failed to add product
