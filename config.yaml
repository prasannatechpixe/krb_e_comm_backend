openapi: 3.0.0
info:
  title: KRB Metaldetectors API Documentation
  description: API documentation for Spiffy
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.example.com/support
    email: srikrishna@techpixe.com

servers:
  - url: http://localhost:3000
    description: Localhost Server
  - url: https://camcapture.smartaihr.com
    description: Production Server

tags:
  - name: Users
    description: User creation related operations
  - name: Admin
    description: Admin related operations  
  - name: Products
    description: Product related operations  

components:
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: token    

paths:
  /users/register:
    post:
      summary: Register New User
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Enter the user Email
                  example: abcd@example.com
                password: 
                  type: string
                  description: enter user required password
                  example: Xyz@123
                username:
                  type: string
                  description: Enter user username
                  example: Xyz
                phoneno:
                  type: number
                  description: Enter user working mobile number
                  example: 8829937835
                country:
                  type: string
                  description: Enter user cuntry
                  example: India    
      responses:
        '200':
          description: user registration success
        '500':
          description: Email already exist or Failed to register  

  /users/validateregister:
    post:
      summary: Validate the registered users
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Eemail:
                  type: string
                  description: enter the Eemail
                  example: 05746a630f57a35e0cb2bd5f9d7cc15149e2e9eab7fb1facb24fefa41d3f7573
                uid:
                  type: string
                  description: Enter uid
                  example:  a38a07640e76a0c50bfd724c181f02b7
      responses:
        '200': 
          description: user verification successfull
        '201':
          description: User already verified
        '500':
          description: Duplicate data exist or Failed to verify 

  /users/login:
    post:
      summary: Login registered users'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:  
            schema: 
              type: object
              properties:
                email:
                  type: string
                  description: Enter the user reqgistered email
                  example: abcd@example.com
                password:
                  type: string
                  description: enrter the user password
                  example: Xyz@123
      responses:
        '201':
          description: user login sucessfull
        '500':
           description: Duplicate data exist or Failed to login 

  /users/forgot-password:
    post:
      summary: forgot password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: enter registered email to get the reset password link
                  example: xyz@example.com
      responses:
        '201':
          description: password reset link sent to email successfully
        '500': 
          description:  Duplicate data exist or Failed to sent mail 

  /users/reset-password:
    post:
      summary: reset the new password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Eemail:
                  type: string
                  descrtiption: enter the Eemail id
                  example: 05746a630f57a35e0cb2bd5f9d7cc15149e2e9eab7fb1facb24fefa41d3f7573
                uid:
                  type: string
                  description: enter the uid
                  example:  a38a07640e76a0c50bfd724c181f02b7
                new_password:
                  type: string
                  description: enter the new_password
                  example: Xyz@456
      responses:
        '200':
          description: password updated successfully
        '500':  
          description: Duplicate data exist or Failed to update

  /users/change-password:
    post: 
      summary: user can change their Password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: enter the user token 
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InByYXNhbm5hQHRlY2hwaXhlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ3MDMxMTMzLCJleHAiOjE3NDcwNjM1MzN9.wASrO8XcGyh0C9T8FZ9UYB98hm-TokAcdJztkG8IRew
                old_password: 
                  type: string
                  description: enter the old password
                  example: Xyz@456
                new_password:
                  type: string
                  description: enter the user new password
                  example: Abc@123
      responses:
        '200':
          description: password changed successfully
        '400':
          description: old password is incorrect  
        '404':  
          description: user not found
        '500':
          description: password is not changed  

  /users/profileupdate:
    put:
      summary: Update the user profile details
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Enter the user token 
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InByYXNhbm5hQHRlY2hwaXhlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ3MDMxMTMzLCJleHAiOjE3NDcwNjM1MzN9.wASrO8XcGyh0C9T8FZ9UYB98hm-TokAcdJztkG8IRew
                name:
                  type: string
                  description: Enter the user name
                  example: Prasanna Basava
                phoneno: 
                  type: string
                  description: Enter the user mobile number
                  example: 25643674735
                profilepic:
                  type: string
                  format: binary
                  description: Profile picture file to upload  
      responses:
        '200':
          description: Profile updated successfully
        '400':
          description: Missing required fields
        '500':
          description: Failed to update profile

  /users/contact-form:
    post:
      tags:
        - Users
      summary: Contact us
      description: You may contact the admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Full name of the user submitting the contact form
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  description: Email address of the user
                  example: "johndoe@example.com"
                phone:
                  type: string
                  pattern: "^[0-9]{10,15}$"
                  description: Phone number of the user (10-15 digits)
                  example: "9876543210"
                message:
                  type: string
                  description: Message content provided by the user
                  example: "I would like to know more about your services."
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error

  /users/logout:
    post:
      tags:
        - Users
      summary: Logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties: 
                token:
                  type: string
                  description: enter the token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InByYXNhbm5hQHRlY2hwaXhlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ3MDM0Njk0LCJleHAiOjE3NDcwNjcwOTR9.MzFhV6ynRUYqkisWER7lCi5FdbLs3fpIuj-Xan5gKa4
      responses:
        "200":
          description: Success
        "201":
          description: Created
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /products/add:
    post:
      summary: Add a product
      tags:
        - Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Name of the product"
                  example: "Wireless Headphones"
                description:
                  type: string
                  description: "Detailed description of the product"
                  example: "High-quality wireless headphones with noise cancellation"
                price_in_usd:
                  type: number
                  format: decimal
                  description: "Price in USD"
                  example: 199.99
                price_in_inr:
                  type: number
                  format: decimal
                  description: "Price in INR"
                  example: 14999.99
                discountPrice:
                  type: number
                  format: float
                  description: "Discounted price"
                  example: 179.99
                stock:
                  type: integer
                  description: "Stock quantity available"
                  example: 50
                categoryId:
                  type: string
                  description: "Category ID the product belongs to"
                  example: "electronics"
                brandId:
                  type: string
                  description: "Brand ID the product belongs to"
                  example: "sony"
                useCase:
                  type: boolean
                  description: "Whether the product is meant for a specific use case"
                  example: false
                rating:
                  type: number
                  format: float
                  description: "Average rating of the product"
                  example: 4.5
                images:
                  type: array
                  items:
                    type: string
                    format: uri
                  description: "List of image URLs for the product"
                  example:
                    - "https://example.com/image1.jpg"
                    - "https://example.com/image2.jpg"
                showIn:
                  type: array
                  items:
                    type: string
                  description: "Where the product should be displayed"
                  example: ["Featured", "Best Selling"]
                tags:
                  type: string
                  description: "Search tags related to the product"
                  example: "wireless, headphones, audio"
                Availability:
                  type: string
                  enum: ["In Stock", "Out of Stock", "Pre-order"]
                  description: "Availability status of the product"
                  example: "In Stock"
                specifications:
                  type: object
                  description: "Product specifications such as color, size, etc."
                  example:
                    color: "Black"
                    battery_life: "30 hours"
                isPublished:
                  type: boolean
                  description: "Whether the product is publicly visible"
                  example: true
                youtubeLinks:
                  type: array
                  items:
                    type: string
                    format: uri
                  description: "YouTube video links related to the product"
                  example:
                    - "https://youtube.com/watch?v=abc123"
                manual:
                  type: array
                  items:
                    type: string
                  description: "User manual links"
                  example:
                    - "https://example.com/manual.pdf"
                product_details:
                  type: string
                  description: "Additional product details"
                  example: "Noise-canceling Bluetooth headphones with touch controls"
                multiShowIn:
                  type: array
                  items:
                    type: string
                  description: "Multiple categories where the product is shown"
                  example: ["New Arrival", "Recommended"]
                features:
                  type: boolean
                  description: "Whether the product has special features"
                  example: true
      responses:
        '200':
          description: Product added successfully
        '403':
          description: Access denied - Admin role required  
        '500':
          description: Failed to add product
